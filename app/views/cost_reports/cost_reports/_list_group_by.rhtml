<%
  def group_by_column
    CostQuery.group_by_columns[@query.group_by[:name]]
  end
  
  def display_costs
    CostEntry.column_names.include?(group_by_column[:db_field].to_s) && @query.display_cost_entries
  end
  
  def display_time
    TimeEntry.column_names.include?(group_by_column[:db_field].to_s) && @query.display_time_entries
  end


  def display_js(invert=false)
    return "'' + Form.serialize('filter-options')" unless group_by_column[:scope] == :costs

    if invert
      display_costs = !display_costs
      display_time = !display_time
    end
    
    if display_costs && !display_time
      "'cost_query[display_cost_entries]=1&cost_query[display_time_entries]=0'"
    elsif !display_costs && display_time
      "'cost_query[display_cost_entries]=0&cost_query[display_time_entries]=1'"
    else
      "Form.serialize('filter-options')"
    end
  end
  
  
  def filter_js(filter_hash)
    if group_by_column[:scope] == :costs && filter_hash[:values].nil?
      return ""
    end
    
    {:filters => {(@query.filters ? @query.filters.length : 0) => filter_hash}}.to_query
  end
%>

<% if @grouped_entries.blank? %>
  <p class="nodata"><%= l(:label_no_data) %></p>
<% else %>

<%= element_hidden_warning %>
<table class="list">
  <thead>
    <th>Group By</th>
    <th class="units">Count</th>
    <% if (@query.group_by["name"] == "cost_type_id") || (!display_costs) %><th><%= l(:caption_cost_unit_plural) %></th><% end %>
    <th class="currency">Sum</th>
    <th>Drill Down</th>
  </thead>
  <tbody>
    <% 
      unit_sum = Hash.new(0)
      @grouped_entries.each do |entry|
        entry &&= entry.with_indifferent_access
        filter = @query.filter_from_group_by(entry)
        
        if filter[:values].nil?
          display_js = display_js(true)
        else
          display_js = display_js(false)
        end
        filter_js = filter_js(filter)
        group_by = {:group_by=>{:name=>"", :granularity=>"year"}}
        
        fields = entry.keys - %w[count sum unit_sum]
        if fields.include? "tmonth"
          name = "#{entry[:tyear]}, #{month_name(entry["tmonth"].to_i)}"
        elsif fields.include? "tweek"
          name = "#{entry[:tyear]}, #{l(:week)} \##{entry["tweek"]}"
        else
          name = fields.map { |k| CostQuery.get_name(k, entry[k]) }.join " "
        end
        name.strip!
      %>

      <tr class="<%=  cycle('odd', 'even') %>">
        <td>
          <%= name %>
        </td>
        <td class="units"><%=l :x_entries, :count => entry["count"].to_i %></td>

        <% if (@query.group_by["name"] == "cost_type_id") || (!display_costs)
              cost_type = CostType.find_by_id(entry["cost_type_id"])
        -%>
        <td class="units">
          <% if cost_type %>
            <%- unit_sum[cost_type] += entry["unit_sum"].to_f -%>
            <%= pluralize(entry["unit_sum"], cost_type.unit, cost_type.unit_plural)  %>
          <%- elsif display_costs || entry[group_by_column[:db_field]] -%>
            <%- unit_sum[cost_type] += entry["unit_sum"].to_f -%>
            <%= l_hours(entry["unit_sum"] || "0") %>
          <%- end %>
        </td>
        <%- end %>
        <td class="currency"><%= number_to_currency(entry["sum"]) %></td>
        <td>
          <%= link_to_remote "Drill Down", {
              :url => { :set_filter => 1 },
              :update => "content",
              :with => "original_filters + '&#{filter_js}&#{group_by.to_query}&' + #{display_js}"
           } %>
        </td>
      </tr>
    <% end %>
    <tr>
      <td>&nbsp;</td>
      <td class="units"><strong><%=l :x_entries, :count => @entry_count.to_i %></strong></td>
      <% if (@query.group_by["name"] == "cost_type_id") || (!display_costs) %><td class="units">
        <% if unit_sum.count == 1 
          cost_type = unit_sum.keys[0]
          sum = unit_sum[cost_type]
        -%>
          <%- if cost_type -%>
            <%= pluralize(sum, cost_type.unit, cost_type.unit_plural)  %>
          <%- else -%>
            <%= l_hours(sum || "0") %>
          <%- end %>
        <%- else -%>
        &nbsp;
        <%- end %>
        </td><% end %>
      <td class="currency"><strong><%= number_to_currency @entry_sum %></strong></td>
      <td>&nbsp;</td>
    </tr>
  </tbody>
</table>
<% end %>