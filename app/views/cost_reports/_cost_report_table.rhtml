<%
  walker.for_final_row do |row, cells|
    "<td>#{show_row row}</td>" << cells.join << "<td>#{number_to_currency(row.real_costs)}</td>"
  end

  walker.for_row do |row, subrows|
    subrows.flatten!
    unless row.fields.empty?
      subrows[0] = <<-HTML
        <td rowspan='#{subrows.size}'>#{show_row row}</td>
        #{subrows[0]}
        <td rowspan='#{subrows.size}'>#{number_to_currency(row.real_costs)}</td>
      HTML
    end
    subrows
  end

  walker.for_empty_cell { "<td>&nbsp;#{":)" if params[:debug]}</td>" }

  walker.for_cell do |result|
    "<td>#{number_to_currency result.real_costs}#{", " << result.fields.inspect << ", " << result.key.inspect if params[:debug]}</td>"
  end
%>

<table style="text-align: center; border-collapse: collapse" border="1">
  <% walker.headers do |list, first, first_in_col, last_in_col| %>
    <%= '<tr>' if first_in_col %>
      <%= "<td rowspan='#{query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'>#{'x' if params[:debug]}</td>" if first %>
      <% list.each do |column| %>
        <td colspan="<%= column.final_number(:column) %>"><%= show_row column %></td>
      <% end %>
      <%= "<td rowspan='#{@query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'>#{'x' if params[:debug]}</td>" if first %>
    <%= '</tr>' if last_in_col %>
  <% end %>

  <% walker.body do |line| %>
    <tr><%= line %></tr>
  <% end %>
  
  <% walker.reverse_headers do |list, first, first_in_col, last_in_col| %>
    <% if first_in_col %>
      <tr>
      <%= "<td rowspan='#{query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'></td>" if first %>
    <% end %>
    <% list.each do |column| %>
      <td colspan="<%= column.final_number(:column) %>"><%= number_to_currency column.real_costs %></td>
    <% end %>
    <% if last_in_col %>
      <%= "<td rowspan='#{@query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'>#{number_to_currency query.real_costs}</td>" if first %>
      </tr>
    <% end %>
  <% end %>
</table>

<% if params[:debug] %>
  <pre>
  
    [ Query ]
    <% query.chain.each do |child| %>
      - <%= h child.class.inspect %>, <%= h child.type %>
    <% end %>
  
    [ RESULT ]
  
    <% query.result.recursive_each_with_level do |level, result| %>
      <%= ">>> " * (level+1) %><%= h result.inspect %>,
         <%= "   " * (level+1) %><%= h result.type.inspect %>,
         <%= "   " * (level+1) %><%= h result.fields.inspect %>
    <% end %>
  </pre>
<% end %>