<%

def debug_fields(result, prefix = ", ")
  prefix << result.fields.inspect << ", " << result.key.inspect if params[:debug]
end

walker.for_final_row do |row, cells|
  html = "<th class='normal inner left'>#{show_row row}#{debug_fields(row)}</th>"
  html << cells.join
  html << "<th class='normal inner right'>#{number_to_currency(row.real_costs)}#{debug_fields(row)}</th>"
end

walker.for_row do |row, subrows|
  subrows.flatten!
  unless row.fields.empty?
    subrows[0] = <<-HTML
    <th class='top left' rowspan='#{subrows.size}'>#{show_row row}#{debug_fields(row)}</th>
    #{subrows[0].gsub("class='normal", "class='top")}
    <th class='top right' rowspan='#{subrows.size}'>#{number_to_currency(row.real_costs)}#{debug_fields(row )}</th>
    HTML
  end
  subrows.last.gsub!("class='normal", "class='bottom")
  subrows.last.gsub!("class='top", "class='bottom top")
  subrows
end

walker.for_empty_cell { "<td class='normal empty'>&nbsp;</td>" }

walker.for_cell do |result|
  "<td class='normal'>#{number_to_currency result.real_costs}#{debug_fields(result)}</td>"
end
%>

<style type="text/css">
<!--
/* move somewhere else */

.report {
  text-align:       center;
  border-collapse:  collapse;
  font-size:        85%;
  border:           solid 1px #ddd !important;
  width:            auto !important; }
.report th {
  border:           dotted 1px #ddd }

.report td, .report th {
  min-width:        90px;
  white-space:      nowrap; }

.report td {
    border: dotted 1px #ddd;
    color: #666;
    text-align: right;
    padding-right: 5px;
}

.report td:hover {
  color: #000;
}

.report th {
  border: solid 1px #ccc;
  background-color: #e3e3e3 !important;
}

.report th.inner {
  border: dotted 1px #ddd;
  background-color: #efefef !important;
}

.report .odd th.inner {
  background-color: #e8e8e8 !important;
}

.report tr:hover .inner {
  background-color: #f5f5c5 !important;
}

.report .top {
  border-top: solid 1px #ccc !important;
}

.report .bottom {
  border-bottom: solid 1px #ccc !important;
}

.report thead .inner {
  text-align: right;
  padding-right: 5px;
}

.report tfoot th {
  padding-right: 5px;
  text-align: right;
}

.report .result {
  font-size: 120%;
  vertical-align: bottom;
}

.report thead tr:hover .inner, .report tfoot tr:hover .inner {
  background-color: #efefef !important;
}

.report .left {
  text-align: left;
  padding-left: 5px;
}

.report .right {
  text-align: right;
  padding-right: 5px;
}

-->
</style>

<table class='list report'>
  <thead>
    <% walker.headers do |list, first, first_in_col, last_in_col| %>
      <%= '<tr>' if first_in_col %>
        <%= "<th rowspan='#{query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'></th>" if first %>
        <% list.each do |column| %>
          <th colspan="<%= column.final_number(:column) %>" class="<%= "inner" if column.final? :column %>">
            <%= show_row column %>
          </th>
        <% end %>
        <%= "<th rowspan='#{@query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'></th>" if first %>
      <%= '</tr>' if last_in_col %>
    <% end %>
  </thead>

  <tfoot>
    <% walker.reverse_headers do |list, first, first_in_col, last_in_col| %>
      <% if first_in_col %>
        <tr>
        <%= "<th rowspan='#{query.depth_of(:column)}' colspan='#{query.depth_of(:row)}'></th>" if first %>
      <% end %>
      <% list.each do |column| %>
        <th colspan="<%= column.final_number(:column) %>" class="<%= "inner" if first %>">
          <%= number_to_currency column.real_costs %><%= debug_fields(column) %>
        </th>
      <% end %>
      <% if last_in_col %>
        <% if first %>
          <th rowspan='<%= @query.depth_of(:column) %>' colspan='<%= query.depth_of(:row) %>' class='result'>
            <%= number_to_currency query.real_costs %>
          </th>
        <% end %>
        </tr>
      <% end %>
    <% end %>
  </tfoot>

  <tbody>
    <% walker.body do |line| %>
      <tr class='<%= cycle("odd", "even") %>'><%= line %></tr>
    <% end %>
  </tbody>
</table>

<% if params[:debug] %>
  <pre>
  
    [ Query ]
    <% query.chain.each do |child| %>
      - <%= h child.class.inspect %>, <%= h child.type %>
    <% end %>
  
    [ RESULT ]
    <% query.result.recursive_each_with_level do |level, result| %>
      <%= ">>> " * (level+1) %><%= h result.inspect %>,
         <%= "   " * (level+1) %><%= h result.type.inspect %>,
         <%= "   " * (level+1) %><%= h result.fields.inspect %>
    <% end %>

    [ HEADER STACK ]
    <% walker.header_stack.each do |l| %>
      <%= ">>> #{l.inspect}" %>
    <% end %>
    
  </pre>
<% end %>