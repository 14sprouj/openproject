<% content_for :header_tags do %>
  <%= javascript_include_tag "select_list_move_optgroup", :plugin => "redmine_reporting" %>
  <%= javascript_include_tag "reporting", :plugin => "redmine_reporting" %>
  <%= javascript_include_tag "sortable", :plugin => "redmine_reporting" %>
  <%= stylesheet_link_tag 'reporting', :plugin => 'redmine_reporting' %>
<% end %>

<% if @custom_errors && !@custom_errors.empty? %>
  <% @custom_errors.each do |err| %>
    <div class="flash error"><%= err %></div>
  <% end %>
<% end %>

<h2><%= l(:label_cost_report) %></h2>
<% html_title( l(:label_cost_report) ) %>

<% form_for @query, :url => {:controller => 'cost_report', :action => 'new' }, :html => {:id => 'query_form', :method => :post} do |query_form| %>
<div id="query_form_content">
  <fieldset id="query_fieldset" class="collapsible <%= "collapsed" unless @query.new_record? %>">
    <legend onclick="toggleFieldset(this);"><%= l(:label_query) %></legend>
    <div id="query_settings">
      <h1><%= l(:label_filter_plural) %></h1>
      <div <%= 'style="display:none;"' unless @query.new_record? %>><%= render :partial => 'filters', :locals => {:f => query_form, :query => @query} %></div>
      <h1><%= l(:label_group_by) %></h1>
      <div <%= 'style="display:none;"' unless @query.new_record? %>><%= render :partial => 'group_by', :locals => {:f => query_form, :query => @query} %></div>
      
      <%= render :partial => 'restore_query', :locals => {:f => query_form, :query => @query} %>
      <p class="buttons">
        <%= link_to_remote "<span><em>#{l(:button_apply)}</em></span>",
                           { :url => { :set_filter => 1 },
                             :condition => 'Ajax.activeRequestCount === 0',
                             :before => 'select_active_group_bys();',
                             :after => 'reset_group_by_selects();',
                             :update => "content",
                             :with => "Form.serialize('query_form')",
                             :eval_scripts => true
                           }, :class => 'button apply' %>
        <%= link_to_function l(:button_clear), "disable_all_filters(); disable_all_group_bys();", :class => 'icon icon-reload' %>
        <% if User.current.allowed_to?(:save_queries, @project, :global => true) %>
        <%
          #link_to l(:button_save), {}, :onclick => "$('query_form').submit(); return false;", :class => 'icon icon-save'
        %>
        <% end %>
      </p>
    </div>
  </fieldset>
</div>

<div class='cost_types'>
  <b><%= l(:label_report) %>:</b>
  <% @available_cost_types.each do |id, label| %>
    <%=
      if id != @unit_id
        link_to_remote label, {
          :url => { :set_filter => 1, :unit => id },
          :before => 'select_active_group_bys();',
          :after => 'reset_group_by_selects();',
          :update => "content",
          :with => "Form.serialize('query_form')",
          :eval_scripts => true }
      else
        "<b>#{label}</b>"
      end
    %>
  <% end %>
</div>

<% end %>

<% if @valid and @query.result.count > 0 %>
  <%= render :partial => @table_partial, :locals => {:query => @query, :walker => @query.walker} %>
  <p class="footnote">
    <%= l(:text_costs_are_rounded_note) %>
    <%= "<br />#{l(:information_restricted_depending_on_permission)}" if !User.current.admin?%>
  </p>
  <%= call_hook(:view_cost_report_table_bottom) %>
<% else %>
  <p class="nodata"><%= l(:label_no_data) %></p>
<% end %>
